Test testSignIn() FAILED
app_1  |
app_1  |   org.opentest4j.AssertionFailedError:
app_1  |   expected: 200
app_1  |    but was: 401
app_1  |       at app//hexlet.project.UserTest.testSignIn(UserTest.java:114)
app_1  |
app_1  |
app_1  |     2023-04-26 19:32:27.574  INFO 123 --- [    Test worker] o.s.t.c.transaction.TransactionContext   :
Began transaction (1) for test context [DefaultTestContext@4052274f testClass = UserTest,
testInstance = hexlet.project.UserTest@62d42eb7, testMethod = testSignIn@UserTest,
testException = [null],
mergedContextConfiguration = [WebMergedContextConfiguration@132ddbab
testClass = UserTest, locations = '{}', classes = '{class hexlet.code.AppApplication}',
contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}',
propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}',
contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.
MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@46dffdc3,
org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3,
org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@33fe57a9,
[ImportsContextCustomizer@297ea53a key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration,
org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.
test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.
oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.
resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.
SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration,
org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.
test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.
WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@115667d,
org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@497486b3,
org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.
TestRestTemplateContextCustomizer@3d2ee678, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.
boot.test.context.SpringBootTestWebEnvironment@5fd4f8f5], resourceBasePath = 'src/main/webapp', contextLoader =
'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.
test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.
ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.
orm.jpa.JpaTransactionManager@379cfc77]; rollback [true]
app_1  |     Hibernate: insert into users (id, created_at, email, first_name, last_name, password) values (null, ?, ?, ?, ?, ?)
app_1  |     Hibernate: insert into users (id, created_at, email, first_name, last_name, password) values (null, ?, ?, ?, ?, ?)
app_1  |     Hibernate: insert into users (id, created_at, email, first_name, last_name, password) values (null, ?, ?, ?, ?, ?)
app_1  |
app_1  |     MockHttpServletRequest:
app_1  |           HTTP Method = POST
app_1  |           Request URI = /api/users
app_1  |            Parameters = {}
app_1  |               Headers = [Content-Type:"application/json;charset=UTF-8", Authorization:"", Content-Length:"109"]
app_1  |                  Body = {"firstName":"Elbert","lastName":"Abshire","email":"elbert_abshire52@gmail.com","password":"beliJwkwjlSYdlI"}
app_1  |         Session Attrs = {}
app_1  |
app_1  |     Handler:
app_1  |                  Type = hexlet.code.controller.UserController
app_1  |                Method = hexlet.code.controller.UserController#createUser(UserDto)
app_1  |
app_1  |     Async:
app_1  |         Async started = false
app_1  |          Async result = null
app_1  |
app_1  |     Resolved Exception:
app_1  |                  Type = null
app_1  |
app_1  |     ModelAndView:
app_1  |             View name = null
app_1  |                  View = null
app_1  |                 Model = null
app_1  |
app_1  |     FlashMap:
app_1  |            Attributes = null
app_1  |
app_1  |     MockHttpServletResponse:
app_1  |                Status = 201
app_1  |         Error message = null
app_1  |               Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0"]
app_1  |          Content type = application/json
app_1  |                  Body = {"id":5,"email":"elbert_abshire52@gmail.com","firstName":"Elbert","lastName":"Abshire","createdAt":"2023-04-26T19:32:27.725+00:00"}
app_1  |         Forwarded URL = null
app_1  |        Redirected URL = null
app_1  |               Cookies = []
app_1  |
app_1  |     MockHttpServletRequest:
app_1  |           HTTP Method = POST
app_1  |           Request URI = /api/users
app_1  |            Parameters = {}
app_1  |               Headers = [Content-Type:"application/json;charset=UTF-8", Authorization:"", Content-Length:"111"]
app_1  |                  Body = {"firstName":"Lawrence","lastName":"Kulas","email":"lawrence.kulas87@outlook.com","password":"XXs8HMdxYWdQj4m"}
app_1  |         Session Attrs = {}
app_1  |
app_1  |     Handler:
app_1  |                  Type = hexlet.code.controller.UserController
app_1  |                Method = hexlet.code.controller.UserController#createUser(UserDto)
app_1  |
app_1  |     Async:
app_1  |         Async started = false
app_1  |          Async result = null
app_1  |
app_1  |     Resolved Exception:
app_1  |                  Type = null
app_1  |
app_1  |     ModelAndView:
app_1  |             View name = null
app_1  |                  View = null
app_1  |                 Model = null
app_1  |
app_1  |     FlashMap:
app_1  |            Attributes = null
app_1  |
app_1  |     MockHttpServletResponse:
app_1  |                Status = 201
app_1  |         Error message = null
app_1  |               Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0"]
app_1  |          Content type = application/json
app_1  |                  Body = {"id":6,"email":"lawrence.kulas87@outlook.com","firstName":"Lawrence","lastName":"Kulas","createdAt":"2023-04-26T19:32:27.830+00:00"}
app_1  |         Forwarded URL = null
app_1  |        Redirected URL = null
app_1  |               Cookies = []
app_1  |
app_1  |     MockHttpServletRequest:
app_1  |           HTTP Method = POST
app_1  |           Request URI = /api/users
app_1  |                  Type = null
app_1  |
app_1  |     ModelAndView:
app_1  |             View name = null
app_1  |                  View = null
app_1  |                 Model = null
app_1  |
app_1  |     FlashMap:
app_1  |            Attributes = null
app_1  |
app_1  |     MockHttpServletResponse:
app_1  |                Status = 401
app_1  |         Error message = Unauthorized
app_1  |               Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0"]
app_1  |          Content type = null
app_1  |                  Body =
app_1  |         Forwarded URL = null
app_1  |        Redirected URL = null
app_1  |               Cookies = []
app_1  |     2023-04-26 19:32:27.959  INFO 123 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@4052274f testClass = UserTest, testInstance = hexlet.project.UserTest@62d42eb7, testMethod = testSignIn@UserTest, testException = org.opentest4j.AssertionFailedError:
app_1  |     expected: 200
app_1  |      but was: 401, mergedContextConfiguration = [WebMergedContextConfiguration@132ddbab testClass = UserTest, locations = '{}', classes = '{class hexlet.code.AppApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@46dffdc3, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@33fe57a9, [ImportsContextCustomizer@297ea53a key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@115667d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@497486b3, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3d2ee678, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@5fd4f8f5], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]